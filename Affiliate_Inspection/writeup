# Business case 

Pollen is a company that creates and sells 'experience bundles' that include live events, lodging, and exclusive backstage opportunities. They allow you to travel, attend live 
events, and have amazing experiences without having to worry about your itenerary and focus on having a great time with your friends. Rather thain paid advertising and 
traditional digital marketing strategies, Pollen uses a reward based affiliate program. Their affiliates recieve rewards such as line skips, free drinks, or chances to go backstage 
for free rather than a commission. The goal of this strategy is to keep their brand authentic and filter out the money chasers, they want affiliates to be motivated by an amazing
experience and not money. The problem is that affiliates could still sell their tickets and passes in exchange for money, these are known as Wheeler Dealers, but this would hurt
the brand's image. If a Wheeler Dealer gets their friends to go to an event only for their friends to see them hustling other people and trying to sell the rewards then it will
create a negative and ingenuine experience with the brand.The PR team at Pollen inspects everybody that applys for the affiliate program to filter out the Wheeler Dealers. 
Unfortunatley, this is time consuming and Pollen is rapidly growing. They need a faster way to screen affiliate applicants without having to hire tons of people to just review 
applicants.

# Requirements
* must be able to flag applicants that are 'wheeler dealers' or very likley to be
* must match human preformance and the time costs saved must exceed the cost of deployment and production
* must be explainable, both the applicant and the company deserve to know how the model came to it's conclusion
* shouldn't bog down the end user. We don't want applicants to have to enter too many fields [how many is too many?] because this will leave a bad experience on our site.
* The data collection, pipeline, and analysis will prefferably use the snowflake/dbt/looker stack because that's what Pollen uses. We don't want to deviate from the stack unless we
absoultley have to

# Solution
We need to build binary classification machine learning model that flags canidates who seem like the wheeler dealer type. This is because we have 2 possible outputs; approval or
disapproval. Depending on my findings in the data or with talking to potential stakeholders this may or may not be frammed as an anomally detection problem in which case the goal
would be to filter out just a handful of the applicants. I will also try to avoid neural networks and gradient boosting because these models are black box and lack explainability.

# Feasability 
* The data should be relativley easy to collect as long as we can avoid facebook. Storing it could possibly present challenges
* I don't see too many obstacles here so far

# KPI's
## model metrics
We will use recall because we are trying to filter out false negatives (applicants that are wheeler dealers but are labled as normal)

## business metrics
Overall Customer Sentiment. Our model's objective is to keep out the wheeler dealers so that we can keep this metric high. The higher the sentiment the better Pollen's 
reputation.

## Technical requirements
* Data should be stored in a Snowflake Data Warehouse
* We should use dbt for the ELT pipeline
